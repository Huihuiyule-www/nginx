# This is a basic workflow to help you get started with Actions

name: Build nginx Windows

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #
      - uses: actions/checkout@master

      #- name: download 

#      - name: Setup VS2019
#        uses: warrenbuckley/Setup-MSBuild@v1
#      - run : dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"
#      - run : dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
#      - run : dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\"
      #- run : dir "C:\Program Files\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\"



      #- name: MSBuild
      #  working-directory: src
      #  run: msbuild MyProject.csproj
      
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
      - shell: msys2 {0}
        run: |
         auto/configure \
          --with-cc=cl \
          --builddir=objs \
          --with-debug \
          --prefix= \
          --with-ipv6  \
          --conf-path=conf/nginx.conf \
          --pid-path=logs/nginx.pid \
          --http-log-path=logs/access.log \
          --error-log-path=logs/error.log \
          --sbin-path=nginx.exe \
          --http-client-body-temp-path=temp/client_body_temp \
          --http-proxy-temp-path=temp/proxy_temp \
          --http-fastcgi-temp-path=temp/fastcgi_temp \
          --http-scgi-temp-path=temp/scgi_temp \
          --http-uwsgi-temp-path=temp/uwsgi_temp \
          --with-cc-opt=-DFD_SETSIZE=1024 \
          --with-pcre=objs/pcre2-10.35 \
          --with-zlib=objs/zlib \
          --with-http_v2_module \
          --with-http_realip_module \
          --with-http_addition_module \
          --with-http_sub_module \
          --with-http_dav_module \
          --with-http_stub_status_module \
          --with-http_flv_module \
          --with-http_mp4_module \
          --with-http_gunzip_module \
          --with-http_gzip_static_module \
          --with-http_auth_request_module \
          --with-http_random_index_module \
          --with-http_secure_link_module \
          --with-http_slice_module \
          --with-mail \
          --with-stream \
          --with-openssl=objs/openss \
          --with-openssl-opt='no-asm no-tests' \
          --with-http_ssl_module \
          --with-mail_ssl_module \
          --with-stream_ssl_module

      - name: install perl
        uses: shogo82148/actions-setup-perl@v1 
        with:
          perl-version: '5.32'
      #- run: cpanm --installdeps .
      #- run: prove -lv t
      #- run : cmd set path="C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin;%path%"
      - name: nmake 
#        env:
#         path: "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin;%path%"
        shell: powershell
        run: |
          "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\nmake.exe -f objs/Makefile  >build.log"
     # - name: nmake
        #shell: cmd
        #run:  |
          #set path="C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build;%path% "
          #echo %path%
         # nmake -f objs/Makefile         
         # set path="C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin;%path%"
         # cmd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      - name: dir nginx
        run: dir 
      - run: dir objs
      - run: dir src
      - run: type objs/autoconf.err
      #- run: dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\"
      - run: dir  /S d:\a\build.log /B
      - run: type build.log
      - name: find nginx.exe
        shell: cmd
        run: |
         dir  /S d:\a\ng*.exe /B
      - name: gzip
        run:  makecab.exe objs/nginx.exe nginx.zip
         #
        
      - name: Upload to release
        uses: JasonEtco/upload-to-release@master
        with:
          args: nginx.zip application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
 
           
